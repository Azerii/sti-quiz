{"version":3,"sources":["assets/check.svg","components/CheckBox.jsx","components/RadioSelect.jsx","components/Options.jsx","assets/cancel.svg","assets/arrow_left.svg","assets/arrow_right.svg","components/Quiz.jsx"],"names":["Wrapper","styled","div","Box","props","checked","CheckBox","className","name","label","required","onClick","type","id","data-name","readOnly","src","check","alt","htmlFor","Radio","RadioSelect","Options","list","selectType","step","allSelected","setAllSelected","useState","singleSelected","setSingleSelected","multipleSelected","setMutipleSelected","selectOption","option","index","set","selected","get","temp","map","Card","Steps","ul","questions","text","options","desc","Quiz","setShowQuiz","router","useHistory","setStep","Map","update","forceUpdate","question","cancel","Spacer","y","Button","icon","arrow_left","previous","x","xMobile","arrow_right","rand","Math","floor","random","i","arr","symptoms","console","log","localStorage","setItem","includes","push","next","iconRight"],"mappings":"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","file":"static/js/5.9f1e0cac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/check.c0b79339.svg\";","import styled from \"styled-components\";\nimport check from \"assets/check.svg\";\n\nconst Wrapper = styled.div`\n  pointer-events: none;\n\n  label {\n    margin-left: 1.2rem;\n    font-size: 18px;\n    color: var(--grey_light);\n    text-align: left;\n  }\n`;\n\nconst Box = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #ffffff;\n  height: 2rem;\n  width: 2rem;\n  border: 1px solid\n    ${(props) => (props.checked ? \"var(--primary)\" : \"var(--grey_light)\")};\n  border-radius: 2px;\n  background-color: ${(props) =>\n    props.checked ? \"var(--primary)\" : \"#ffffff\"};\n  flex-shrink: 0;\n\n  input {\n    display: none;\n  }\n\n  .checkedIcon {\n    height: 0.8rem;\n    pointer-events: none;\n  }\n`;\n\nconst CheckBox = ({\n  className,\n  name,\n  label,\n  required,\n  checked = false,\n  onClick,\n}) => {\n  return (\n    <Wrapper className=\"flexRow alignCenter\" onClick={onClick}>\n      <Box checked={checked} className={className}>\n        <input\n          type=\"checkbox\"\n          name={name}\n          id={`checkbox_${name}}`}\n          data-name={name}\n          checked={checked}\n          readOnly\n          required={required}\n        />\n        <img src={check} alt=\"check\" className=\"checkedIcon\" />\n      </Box>\n      {label && (\n        <label htmlFor={`checkbox_${name}`} className=\"l3\">\n          {label}\n        </label>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default CheckBox;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  pointer-events: none;\n\n  label {\n    margin-left: 1.2rem;\n    font-size: 18px;\n  }\n`;\n\nconst Radio = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #ffffff;\n  height: 2rem;\n  width: 2rem;\n  border: ${(props) =>\n    props.checked\n      ? \"2px solid var(--primary)\"\n      : \" 1px solid var(--grey_light)\"};\n  border-radius: 50%;\n  background-color: #ffffff;\n  position: relative;\n  flex-shrink: 0;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    height: 1.2rem;\n    width: 1.2rem;\n    background-color: var(--primary);\n    border-radius: 50%;\n    display: ${(props) => (props.checked ? \"block\" : \"none\")};\n  }\n\n  input {\n    display: none;\n  }\n\n  .checkedIcon {\n    height: 0.8rem;\n    pointer-events: none;\n  }\n`;\n\nconst RadioSelect = ({\n  className,\n  name,\n  label,\n  required,\n  checked,\n  onClick,\n}) => {\n  return (\n    <Wrapper className=\"flexRow alignCenter\" onClick={onClick}>\n      <Radio checked={checked} className={className}>\n        <input\n          type=\"radio\"\n          name={name}\n          id={`radio_${name}}`}\n          data-name={name}\n          checked={checked}\n          readOnly\n          required={required}\n        />\n      </Radio>\n      {label && <label htmlFor={`radio_${name}`}>{label}</label>}\n    </Wrapper>\n  );\n};\n\nexport default RadioSelect;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport CheckBox from \"./CheckBox\";\nimport RadioSelect from \"./RadioSelect\";\n\nconst Wrapper = styled.div`\n  .option {\n    padding: 1.6rem 2.4rem;\n    border: 1px solid #f4f5f8;\n    border-radius: 1rem;\n    margin-bottom: 1.2rem;\n    width: 100%;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n    &.selected {\n      border-color: var(--secondary);\n    }\n  }\n`;\n\nconst Options = ({\n  list,\n  selectType,\n  step = 0,\n  allSelected,\n  setAllSelected,\n}) => {\n  const [singleSelected, setSingleSelected] = useState(\"\");\n  const [multipleSelected, setMutipleSelected] = useState([]);\n\n  const selectOption = (option, index) => {\n    if (selectType === \"single\") {\n      setAllSelected(allSelected.set(step, option));\n      setSingleSelected(option);\n    } else if (selectType === \"multiple\") {\n      let selected = allSelected.get(step);\n      let temp = {};\n\n      if (selected) {\n        temp = { ...selected };\n      }\n\n      if (temp[index]) {\n        delete temp[index];\n      } else {\n        temp[index] = option;\n      }\n\n      setAllSelected(allSelected.set(step, temp));\n      setMutipleSelected(temp);\n    }\n  };\n\n  return (\n    <Wrapper>\n      {list?.map((option, index) =>\n        selectType === \"multiple\" ? (\n          <button\n            type=\"button\"\n            className={`option${\n              multipleSelected[index] === option ||\n              (allSelected.get(step) && allSelected.get(step)[index])\n                ? \" selected\"\n                : \"\"\n            }`}\n            key={index}\n            onClick={() => selectOption(option, index)}\n          >\n            <CheckBox\n              className=\"checkbox\"\n              name={`${step}_${index}`}\n              label={option}\n              checked={\n                multipleSelected[index] === option ||\n                (allSelected.get(step) ? allSelected.get(step)[index] : false)\n              }\n            />\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className={`option${\n              option === singleSelected || option === allSelected.get(step)\n                ? \" selected\"\n                : \"\"\n            }`}\n            key={index}\n            onClick={() => selectOption(option, index)}\n          >\n            <RadioSelect\n              className=\"radio\"\n              name={`${step}_${index}`}\n              label={option}\n              checked={\n                option === singleSelected || option === allSelected.get(step)\n              }\n            />\n          </button>\n        )\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Options;\n","export default __webpack_public_path__ + \"static/media/cancel.2ce02fea.svg\";","export default __webpack_public_path__ + \"static/media/arrow_left.c47e227d.svg\";","export default __webpack_public_path__ + \"static/media/arrow_right.486848cd.svg\";","import styled from \"styled-components\";\nimport Options from \"./Options\";\nimport Spacer from \"./Spacer\";\nimport cancel from \"assets/cancel.svg\";\nimport arrow_left from \"assets/arrow_left.svg\";\nimport arrow_right from \"assets/arrow_right.svg\";\nimport { useState } from \"react\";\nimport Button from \"./Button\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  min-height: 100vh;\n  width: 100vw;\n  background-color: #00000090;\n  z-index: 10;\n  height: 100vh;\n  overflow: auto;\n`;\n\nconst Card = styled.div`\n  width: 56rem;\n  margin: 9.6rem auto;\n  background-color: #ffffff;\n  border-radius: 2rem;\n  padding: 9.6rem 4.8rem 2.4rem 4.8rem;\n  display: none;\n  position: relative;\n\n  &.show {\n    display: block;\n  }\n\n  .cancel {\n    position: absolute;\n    top: 4.8rem;\n    right: 4.8rem;\n\n    .icon {\n      height: 1.2rem;\n    }\n  }\n\n  .question {\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 450;\n    line-height: 24px;\n\n    i {\n      color: var(--grey_dark);\n    }\n  }\n\n  .previousbtn {\n    background-color: #f4f5f8;\n    color: var(--text);\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 95%;\n    padding: 9.6rem 2.4rem 2.4rem 2.4rem;\n\n    .actionBtns {\n      width: 100%;\n    }\n  }\n`;\n\nconst Steps = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  grid-gap: 1.2rem;\n\n  .step {\n    dislpay: block;\n    height: 5px;\n    background-color: var(--secondary);\n    border-radius: 2rem;\n\n    &.active {\n      background-color: var(--primary);\n    }\n  }\n`;\n\nconst questions = [\n  {\n    text: \"Select your gender?\",\n    options: [\"Male\", \"Female\", \"Other\", \"Prefer not to say\"],\n    selectType: \"single\",\n  },\n  {\n    text: \"Which of the following symptoms are you displaying or have you recently noticed?\",\n    options: [\n      \"Itchy genitals or anus\",\n      \"Warts around your anus or genitals\",\n      \"Pain when peeing\",\n      \"Unusual discharge from your anus or genitals\",\n      \"Unusual vaginal bleeding\",\n      \"Lumps our unusual skin growth around the anus or genitals\",\n      \"Warts around your mouth\",\n      \"I haven’t noticed any of these symptoms\",\n    ],\n    selectType: \"multiple\",\n  },\n  {\n    text: \"Have you had unprotected oral, anal or vaginal sex with one or more than one partner in the last year?\",\n    desc: \"(*unprotected sex includes sex without a condom or if a condom broke or slid off)\",\n    options: [\"Yes\", \"No\"],\n    selectType: \"single\",\n  },\n  {\n    text: \"Have you had sex with someone who told you they were HIV positive?\",\n    options: [\"Yes\", \"No\"],\n    selectType: \"single\",\n  },\n  {\n    text: \"Does your partner show symptoms of an STI? (as named in 2 above)\",\n    options: [\"Yes\", \"No\"],\n    selectType: \"single\",\n  },\n  {\n    text: \"Does your sexual partner have multiple sexual partners?\",\n    options: [\"Yes\", \"No\"],\n    selectType: \"single\",\n  },\n  {\n    text: \"Have you ever been forced into having sex against your wishes?\",\n    options: [\"Yes\", \"No\"],\n    selectType: \"single\",\n  },\n  {\n    text: \"Have you ever received a tattoo or piercing from an unlicensed artist or used unsterilised equipment?\",\n    options: [\"Yes\", \"No\"],\n    selectType: \"single\",\n  },\n];\n\nconst Quiz = ({ setShowQuiz }) => {\n  const router = useHistory();\n  const [step, setStep] = useState(0);\n  const [allSelected, setAllSelected] = useState(new Map());\n  const [update, forceUpdate] = useState(\"\");\n\n  const next = () => {\n    if (questions[step + 1]) {\n      setStep(step + 1);\n    } else {\n      let rand = Math.floor(Math.random() * 8);\n      forceUpdate(update + rand);\n\n      let step = 3;\n      let i = 0;\n      let arr = [];\n      let symptoms = allSelected.get(1);\n\n      while (step < 8) {\n        arr[i] = allSelected.get(step);\n\n        i++;\n        step++;\n      }\n\n      if (symptoms) {\n        console.log(symptoms);\n        if (!symptoms[7]) {\n          localStorage.setItem(\"atRisk\", true);\n        }\n      } else if (arr.includes(\"Yes\")) {\n        localStorage.setItem(\"atRisk\", true);\n      } else {\n        localStorage.setItem(\"atRisk\", false);\n      }\n\n      router.push(\"/get-test-kits\");\n    }\n  };\n\n  const previous = () => {\n    if (questions[step - 1]) {\n      setStep(step + -1);\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <Wrapper>\n      {questions?.map((question, index) => (\n        <Card\n          key={`${step}_${index}`}\n          className={`question ${index === step ? \" show\" : \"\"}`}\n        >\n          <button\n            type=\"button\"\n            className=\"cancel\"\n            onClick={() => setShowQuiz(false)}\n          >\n            <img src={cancel} alt=\"Close\" className=\"icon\" />\n          </button>\n          <Steps>\n            <li className={`step${step >= 0 ? \" active\" : \"\"}`}></li>\n            <li className={`step${step >= 1 ? \" active\" : \"\"}`}></li>\n            <li className={`step${step >= 2 ? \" active\" : \"\"}`}></li>\n            <li className={`step${step >= 3 ? \" active\" : \"\"}`}></li>\n            <li className={`step${step >= 4 ? \" active\" : \"\"}`}></li>\n            <li className={`step${step >= 5 ? \" active\" : \"\"}`}></li>\n            <li className={`step${step >= 6 ? \" active\" : \"\"}`}></li>\n            <li className={`step${step >= 7 ? \" active\" : \"\"}`}></li>\n          </Steps>\n          <Spacer y={4.8} />\n          <p className=\"question\">\n            {question.text}\n            {question.desc ? <i>&nbsp;{question.desc}</i> : \"\"}\n          </p>\n          <Spacer y={2.4} />\n          <Options\n            list={question.options}\n            step={step}\n            selectType={question.selectType}\n            allSelected={allSelected}\n            setAllSelected={setAllSelected}\n          />\n          <Spacer y={4.8} />\n          <div className=\"flexRow alignCenter justifyCenter actionBtns\">\n            {questions[step - 1] && (\n              <Button\n                text=\"Previous\"\n                className=\"previousbtn\"\n                icon={arrow_left}\n                question\n                onClick={() => previous()}\n              />\n            )}\n            {questions[step - 1] && <Spacer x={4.8} xMobile={2.4} />}\n\n            <Button\n              text=\"Next\"\n              icon={arrow_right}\n              onClick={() => next()}\n              iconRight\n              question\n            />\n          </div>\n        </Card>\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default Quiz;\n"],"sourceRoot":""}